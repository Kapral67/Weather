@page "/register"

@using System.Net.Http
@using System.Net.Http.Json
@using System.Net.Http.Headers
@using System.Threading.Tasks
@using System.Linq
@using System.Text.Json

@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject NavigationManager NavMan

<div class="card">
    <h4 class="card-header">Create Account</h4>
    <div class="card-body">
        <EditForm Model="@model" OnValidSubmit="Create">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Email</label>
                <InputText @bind-Value="@model.email" class="form-control" />
                <ValidationMessage For="@(() => model.email)" />
            </div>
            <div class="form-group">
                <label>Measurement System</label>
                <select class="form-control" @bind="@model.measurement">
                    @foreach(var u in units){
                        <option value="@u"> @u </option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label>Home Page</label>
                <select class="form-control" @bind="@model.defaultPage">
                    @foreach(var p in pages){
                        <option value="@p"> @p </option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="@model.password" type="password" class="form-control" />
                <ValidationMessage For="@(() => model.password)" />
            </div>
            <div class="form-group">
                <label>Confirm Password</label>
                <InputText @bind-Value="@c_password" type="password" class="form-control" />
            </div>
            <button disabled="@loading" class="btn btn-primary">
                @if(loading){
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }
                Submit
            </button>
        </EditForm>
    </div>
</div>

@code {
    private Models.Register model = new Models.Register();
    List<string> units = new List<string>() { "Default", "SI", "US" };
    List<string> pages = new List<string>() { "Default", "Hourly", "Daily", "Account" };
    private string c_password;
    private bool loading;
    private async Task Create(){
        loading = true;
        if(model.password == c_password && c_password != ""){
            var createRequest = new HttpRequestMessage(HttpMethod.Post, "register");
            if(model.measurement == null)
                model.measurement = "Default";
            if(model.defaultPage == null)
                model.defaultPage = "Default";
            createRequest.Content = new StringContent(JsonSerializer.Serialize(model), null, "application/json");
            using var createResponse = await Http.SendAsync(createRequest);
            if(createResponse.IsSuccessStatusCode){
                NavMan.NavigateTo("/login");
            }
        }
        loading = false;
    }
}
